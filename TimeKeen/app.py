from flask import Flask, render_template, jsonify, request
from flask_cors import CORS
import os
from datetime import datetime, timedelta
import json

# –ò—â–µ–º —à–∞–±–ª–æ–Ω—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
app = Flask(__name__, template_folder=".")
CORS(app)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Redis)
active_timers = {}


@app.route("/")
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return render_template("index.html")


@app.route("/api/places")
def get_places():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–µ—Å—Ç"""
    places = [
        {
            "id": "work",
            "name": "–†–∞–±–æ—Ç–∞",
            "description": "–û—Ñ–∏—Å–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞",
            "background": "work-bg",
            "icon": "üíº",
        },
        {
            "id": "home",
            "name": "–î–æ–º",
            "description": "–î–æ–º–∞—à–Ω—è—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞",
            "background": "home-bg",
            "icon": "üè†",
        },
        {
            "id": "cafe",
            "name": "–ö–∞—Ñ–µ",
            "description": "–ò–Ω—Ç–µ—Ä—å–µ—Ä –∫–∞—Ñ–µ",
            "background": "cafe-bg",
            "icon": "‚òï",
        },
        {
            "id": "library",
            "name": "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞",
            "description": "–¢–∏—Ö–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞",
            "background": "library-bg",
            "icon": "üìö",
        },
    ]
    return jsonify(places)


@app.route("/api/timer/start", methods=["POST"])
def start_timer():
    """API –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞"""
    data = request.get_json()
    duration = data.get("duration", 25)  # –≤ –º–∏–Ω—É—Ç–∞—Ö
    place = data.get("place", "work")

    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
    timer_id = f"timer_{datetime.now().timestamp()}"

    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
    end_time = datetime.now() + timedelta(minutes=duration)

    active_timers[timer_id] = {
        "duration": duration,
        "place": place,
        "start_time": datetime.now().isoformat(),
        "end_time": end_time.isoformat(),
        "is_active": True,
    }

    return jsonify(
        {
            "timer_id": timer_id,
            "duration": duration,
            "end_time": end_time.isoformat(),
            "status": "started",
        }
    )


@app.route("/api/timer/<timer_id>/status")
def get_timer_status(timer_id):
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ç–∞–π–º–µ—Ä–∞"""
    if timer_id not in active_timers:
        return jsonify({"error": "Timer not found"}), 404

    timer = active_timers[timer_id]

    if not timer["is_active"]:
        return jsonify({"status": "completed"})

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫–ª–æ –ª–∏ –≤—Ä–µ–º—è
    end_time = datetime.fromisoformat(timer["end_time"])
    if datetime.now() >= end_time:
        timer["is_active"] = False
        return jsonify({"status": "completed"})

    # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
    remaining = end_time - datetime.now()
    remaining_seconds = int(remaining.total_seconds())

    return jsonify(
        {
            "status": "active",
            "remaining_seconds": remaining_seconds,
            "duration": timer["duration"],
            "place": timer["place"],
        }
    )


@app.route("/api/timer/<timer_id>/stop", methods=["POST"])
def stop_timer(timer_id):
    """API –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∞–π–º–µ—Ä–∞"""
    if timer_id not in active_timers:
        return jsonify({"error": "Timer not found"}), 404

    active_timers[timer_id]["is_active"] = False
    return jsonify({"status": "stopped"})


@app.route("/api/timer/presets")
def get_timer_presets():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ Pomodoro"""
    presets = [
        {"name": "–ö–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤", "duration": 5, "description": "5 –º–∏–Ω—É—Ç"},
        {"name": "–ü–æ–º–æ–¥–æ—Ä–æ", "duration": 25, "description": "25 –º–∏–Ω—É—Ç"},
        {"name": "–î–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤", "duration": 15, "description": "15 –º–∏–Ω—É—Ç"},
        {"name": "–ì–ª—É–±–æ–∫–∏–π —Ñ–æ–∫—É—Å", "duration": 45, "description": "45 –º–∏–Ω—É—Ç"},
        {"name": "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è", "duration": 0, "description": "–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"},
    ]
    return jsonify(presets)


if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=5001)
